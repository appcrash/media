// Code generated from nmd.g4 by ANTLR 4.9.2. DO NOT EDIT.

package nmd

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 20, 160,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8,
	3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13,
	3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 7, 15, 87, 10, 15, 12, 15, 14, 15, 90,
	11, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 6, 17, 98, 10, 17, 13,
	17, 14, 17, 99, 3, 17, 3, 17, 3, 17, 3, 17, 6, 17, 106, 10, 17, 13, 17,
	14, 17, 107, 3, 17, 3, 17, 3, 17, 3, 17, 6, 17, 114, 10, 17, 13, 17, 14,
	17, 115, 5, 17, 118, 10, 17, 3, 18, 6, 18, 121, 10, 18, 13, 18, 14, 18,
	122, 3, 18, 3, 18, 7, 18, 127, 10, 18, 12, 18, 14, 18, 130, 11, 18, 3,
	18, 3, 18, 6, 18, 134, 10, 18, 13, 18, 14, 18, 135, 5, 18, 138, 10, 18,
	3, 19, 6, 19, 141, 10, 19, 13, 19, 14, 19, 142, 3, 19, 3, 19, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 7, 23, 156, 10, 23,
	12, 23, 14, 23, 159, 11, 23, 3, 88, 2, 24, 3, 3, 5, 4, 7, 5, 9, 6, 11,
	7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16,
	31, 2, 33, 17, 35, 18, 37, 19, 39, 2, 41, 2, 43, 2, 45, 20, 3, 2, 6, 5,
	2, 11, 12, 15, 15, 34, 34, 3, 2, 50, 59, 4, 2, 50, 59, 99, 104, 5, 2, 67,
	92, 97, 97, 99, 124, 2, 169, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7,
	3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2,
	15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2,
	2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2,
	2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 3, 47, 3, 2, 2, 2, 5, 49, 3, 2, 2, 2, 7, 52, 3, 2, 2, 2, 9, 56, 3,
	2, 2, 2, 11, 60, 3, 2, 2, 2, 13, 67, 3, 2, 2, 2, 15, 69, 3, 2, 2, 2, 17,
	71, 3, 2, 2, 2, 19, 73, 3, 2, 2, 2, 21, 75, 3, 2, 2, 2, 23, 77, 3, 2, 2,
	2, 25, 79, 3, 2, 2, 2, 27, 81, 3, 2, 2, 2, 29, 83, 3, 2, 2, 2, 31, 93,
	3, 2, 2, 2, 33, 117, 3, 2, 2, 2, 35, 137, 3, 2, 2, 2, 37, 140, 3, 2, 2,
	2, 39, 146, 3, 2, 2, 2, 41, 148, 3, 2, 2, 2, 43, 150, 3, 2, 2, 2, 45, 152,
	3, 2, 2, 2, 47, 48, 7, 61, 2, 2, 48, 4, 3, 2, 2, 2, 49, 50, 7, 47, 2, 2,
	50, 51, 7, 64, 2, 2, 51, 6, 3, 2, 2, 2, 52, 53, 7, 62, 2, 2, 53, 54, 7,
	47, 2, 2, 54, 55, 7, 64, 2, 2, 55, 8, 3, 2, 2, 2, 56, 57, 7, 62, 2, 2,
	57, 58, 7, 47, 2, 2, 58, 59, 7, 47, 2, 2, 59, 10, 3, 2, 2, 2, 60, 61, 7,
	62, 2, 2, 61, 62, 7, 47, 2, 2, 62, 63, 7, 101, 2, 2, 63, 64, 7, 106, 2,
	2, 64, 65, 7, 99, 2, 2, 65, 66, 7, 112, 2, 2, 66, 12, 3, 2, 2, 2, 67, 68,
	7, 125, 2, 2, 68, 14, 3, 2, 2, 2, 69, 70, 7, 46, 2, 2, 70, 16, 3, 2, 2,
	2, 71, 72, 7, 127, 2, 2, 72, 18, 3, 2, 2, 2, 73, 74, 7, 93, 2, 2, 74, 20,
	3, 2, 2, 2, 75, 76, 7, 95, 2, 2, 76, 22, 3, 2, 2, 2, 77, 78, 7, 66, 2,
	2, 78, 24, 3, 2, 2, 2, 79, 80, 7, 60, 2, 2, 80, 26, 3, 2, 2, 2, 81, 82,
	7, 63, 2, 2, 82, 28, 3, 2, 2, 2, 83, 88, 7, 41, 2, 2, 84, 87, 5, 31, 16,
	2, 85, 87, 11, 2, 2, 2, 86, 84, 3, 2, 2, 2, 86, 85, 3, 2, 2, 2, 87, 90,
	3, 2, 2, 2, 88, 89, 3, 2, 2, 2, 88, 86, 3, 2, 2, 2, 89, 91, 3, 2, 2, 2,
	90, 88, 3, 2, 2, 2, 91, 92, 7, 41, 2, 2, 92, 30, 3, 2, 2, 2, 93, 94, 7,
	94, 2, 2, 94, 95, 7, 41, 2, 2, 95, 32, 3, 2, 2, 2, 96, 98, 5, 39, 20, 2,
	97, 96, 3, 2, 2, 2, 98, 99, 3, 2, 2, 2, 99, 97, 3, 2, 2, 2, 99, 100, 3,
	2, 2, 2, 100, 118, 3, 2, 2, 2, 101, 102, 7, 50, 2, 2, 102, 103, 7, 122,
	2, 2, 103, 105, 3, 2, 2, 2, 104, 106, 5, 41, 21, 2, 105, 104, 3, 2, 2,
	2, 106, 107, 3, 2, 2, 2, 107, 105, 3, 2, 2, 2, 107, 108, 3, 2, 2, 2, 108,
	118, 3, 2, 2, 2, 109, 110, 7, 50, 2, 2, 110, 111, 7, 90, 2, 2, 111, 113,
	3, 2, 2, 2, 112, 114, 5, 41, 21, 2, 113, 112, 3, 2, 2, 2, 114, 115, 3,
	2, 2, 2, 115, 113, 3, 2, 2, 2, 115, 116, 3, 2, 2, 2, 116, 118, 3, 2, 2,
	2, 117, 97, 3, 2, 2, 2, 117, 101, 3, 2, 2, 2, 117, 109, 3, 2, 2, 2, 118,
	34, 3, 2, 2, 2, 119, 121, 5, 39, 20, 2, 120, 119, 3, 2, 2, 2, 121, 122,
	3, 2, 2, 2, 122, 120, 3, 2, 2, 2, 122, 123, 3, 2, 2, 2, 123, 124, 3, 2,
	2, 2, 124, 128, 7, 48, 2, 2, 125, 127, 5, 39, 20, 2, 126, 125, 3, 2, 2,
	2, 127, 130, 3, 2, 2, 2, 128, 126, 3, 2, 2, 2, 128, 129, 3, 2, 2, 2, 129,
	138, 3, 2, 2, 2, 130, 128, 3, 2, 2, 2, 131, 133, 7, 48, 2, 2, 132, 134,
	5, 39, 20, 2, 133, 132, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2, 135, 133, 3,
	2, 2, 2, 135, 136, 3, 2, 2, 2, 136, 138, 3, 2, 2, 2, 137, 120, 3, 2, 2,
	2, 137, 131, 3, 2, 2, 2, 138, 36, 3, 2, 2, 2, 139, 141, 9, 2, 2, 2, 140,
	139, 3, 2, 2, 2, 141, 142, 3, 2, 2, 2, 142, 140, 3, 2, 2, 2, 142, 143,
	3, 2, 2, 2, 143, 144, 3, 2, 2, 2, 144, 145, 8, 19, 2, 2, 145, 38, 3, 2,
	2, 2, 146, 147, 9, 3, 2, 2, 147, 40, 3, 2, 2, 2, 148, 149, 9, 4, 2, 2,
	149, 42, 3, 2, 2, 2, 150, 151, 9, 5, 2, 2, 151, 44, 3, 2, 2, 2, 152, 157,
	5, 43, 22, 2, 153, 156, 5, 43, 22, 2, 154, 156, 5, 39, 20, 2, 155, 153,
	3, 2, 2, 2, 155, 154, 3, 2, 2, 2, 156, 159, 3, 2, 2, 2, 157, 155, 3, 2,
	2, 2, 157, 158, 3, 2, 2, 2, 158, 46, 3, 2, 2, 2, 159, 157, 3, 2, 2, 2,
	16, 2, 86, 88, 99, 107, 115, 117, 122, 128, 135, 137, 142, 155, 157, 3,
	8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'->'", "'<->'", "'<--'", "'<-chan'", "'{'", "','", "'}'", "'['",
	"']'", "'@'", "':'", "'='",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "QUOTED_STRING",
	"INT", "FLOAT", "WS", "ID",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "QUOTED_STRING", "ESC", "INT", "FLOAT",
	"WS", "DIGIT", "HEXDIGIT", "LETTER", "ID",
}

type nmdLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewnmdLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *nmdLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewnmdLexer(input antlr.CharStream) *nmdLexer {
	l := new(nmdLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "nmd.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// nmdLexer tokens.
const (
	nmdLexerT__0          = 1
	nmdLexerT__1          = 2
	nmdLexerT__2          = 3
	nmdLexerT__3          = 4
	nmdLexerT__4          = 5
	nmdLexerT__5          = 6
	nmdLexerT__6          = 7
	nmdLexerT__7          = 8
	nmdLexerT__8          = 9
	nmdLexerT__9          = 10
	nmdLexerT__10         = 11
	nmdLexerT__11         = 12
	nmdLexerT__12         = 13
	nmdLexerQUOTED_STRING = 14
	nmdLexerINT           = 15
	nmdLexerFLOAT         = 16
	nmdLexerWS            = 17
	nmdLexerID            = 18
)
