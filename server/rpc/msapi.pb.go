// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: msapi.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodecType int32

const (
	CodecType_RAW      CodecType = 0 // raw data
	CodecType_PCM_ALAW CodecType = 1
	CodecType_AMRNB    CodecType = 2
	CodecType_AMRWB    CodecType = 3
)

// Enum value maps for CodecType.
var (
	CodecType_name = map[int32]string{
		0: "RAW",
		1: "PCM_ALAW",
		2: "AMRNB",
		3: "AMRWB",
	}
	CodecType_value = map[string]int32{
		"RAW":      0,
		"PCM_ALAW": 1,
		"AMRNB":    2,
		"AMRWB":    3,
	}
)

func (x CodecType) Enum() *CodecType {
	p := new(CodecType)
	*p = x
	return p
}

func (x CodecType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodecType) Descriptor() protoreflect.EnumDescriptor {
	return file_msapi_proto_enumTypes[0].Descriptor()
}

func (CodecType) Type() protoreflect.EnumType {
	return &file_msapi_proto_enumTypes[0]
}

func (x CodecType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodecType.Descriptor instead.
func (CodecType) EnumDescriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{0}
}

type MediaParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerIp         string    `protobuf:"bytes,1,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`                                 // remote rtp ip
	PeerPort       uint32    `protobuf:"varint,2,opt,name=peer_port,json=peerPort,proto3" json:"peer_port,omitempty"`                          // remote rtp port
	PayloadRtpType uint32    `protobuf:"varint,3,opt,name=payload_rtp_type,json=payloadRtpType,proto3" json:"payload_rtp_type,omitempty"`      // negotiated payload to use, fixed or dynamic(96 ~ 127)
	RecordType     CodecType `protobuf:"varint,4,opt,name=record_type,json=recordType,proto3,enum=rpc.CodecType" json:"record_type,omitempty"` // codec used to record file
	RecordFile     string    `protobuf:"bytes,5,opt,name=record_file,json=recordFile,proto3" json:"record_file,omitempty"`                     // empty if needs not recording
}

func (x *MediaParam) Reset() {
	*x = MediaParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaParam) ProtoMessage() {}

func (x *MediaParam) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaParam.ProtoReflect.Descriptor instead.
func (*MediaParam) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{0}
}

func (x *MediaParam) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *MediaParam) GetPeerPort() uint32 {
	if x != nil {
		return x.PeerPort
	}
	return 0
}

func (x *MediaParam) GetPayloadRtpType() uint32 {
	if x != nil {
		return x.PayloadRtpType
	}
	return 0
}

func (x *MediaParam) GetRecordType() CodecType {
	if x != nil {
		return x.RecordType
	}
	return CodecType_RAW
}

func (x *MediaParam) GetRecordFile() string {
	if x != nil {
		return x.RecordFile
	}
	return ""
}

type SessionParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SessionParam) Reset() {
	*x = SessionParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionParam) ProtoMessage() {}

func (x *SessionParam) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionParam.ProtoReflect.Descriptor instead.
func (*SessionParam) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{1}
}

func (x *SessionParam) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SessionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SessionStatus) Reset() {
	*x = SessionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStatus) ProtoMessage() {}

func (x *SessionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStatus.ProtoReflect.Descriptor instead.
func (*SessionStatus) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{2}
}

func (x *SessionStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MediaStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId     string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	LocalIp      string `protobuf:"bytes,2,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	LocalRtpPort uint32 `protobuf:"varint,3,opt,name=local_rtp_port,json=localRtpPort,proto3" json:"local_rtp_port,omitempty"`
	PeerIp       string `protobuf:"bytes,4,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	PeerRtpPort  uint32 `protobuf:"varint,5,opt,name=peer_rtp_port,json=peerRtpPort,proto3" json:"peer_rtp_port,omitempty"`
}

func (x *MediaStream) Reset() {
	*x = MediaStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaStream) ProtoMessage() {}

func (x *MediaStream) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaStream.ProtoReflect.Descriptor instead.
func (*MediaStream) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{3}
}

func (x *MediaStream) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *MediaStream) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *MediaStream) GetLocalRtpPort() uint32 {
	if x != nil {
		return x.LocalRtpPort
	}
	return 0
}

func (x *MediaStream) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *MediaStream) GetPeerRtpPort() uint32 {
	if x != nil {
		return x.PeerRtpPort
	}
	return 0
}

type MediaAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Cmd      string `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	CmdArg   string `protobuf:"bytes,3,opt,name=cmd_arg,json=cmdArg,proto3" json:"cmd_arg,omitempty"`
}

func (x *MediaAction) Reset() {
	*x = MediaAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaAction) ProtoMessage() {}

func (x *MediaAction) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaAction.ProtoReflect.Descriptor instead.
func (*MediaAction) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{4}
}

func (x *MediaAction) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *MediaAction) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *MediaAction) GetCmdArg() string {
	if x != nil {
		return x.CmdArg
	}
	return ""
}

type MediaActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	State    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MediaActionResult) Reset() {
	*x = MediaActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaActionResult) ProtoMessage() {}

func (x *MediaActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaActionResult.ProtoReflect.Descriptor instead.
func (*MediaActionResult) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{5}
}

func (x *MediaActionResult) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *MediaActionResult) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type MediaActionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Event    string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *MediaActionEvent) Reset() {
	*x = MediaActionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaActionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaActionEvent) ProtoMessage() {}

func (x *MediaActionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_msapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaActionEvent.ProtoReflect.Descriptor instead.
func (*MediaActionEvent) Descriptor() ([]byte, []int) {
	return file_msapi_proto_rawDescGZIP(), []int{6}
}

func (x *MediaActionEvent) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *MediaActionEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

var File_msapi_proto protoreflect.FileDescriptor

var file_msapi_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72,
	0x70, 0x63, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x72, 0x74, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x74, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0b,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x74, 0x70,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x52, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x72, 0x74, 0x70, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x52,
	0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6d, 0x64, 0x41, 0x72, 0x67, 0x22, 0x46, 0x0a,
	0x11, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x38, 0x0a, 0x09,
	0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x43, 0x4d, 0x5f, 0x41, 0x4c, 0x41, 0x57, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x4d, 0x52, 0x4e, 0x42, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x4d, 0x52, 0x57, 0x42, 0x10, 0x03, 0x32, 0xbb, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x41, 0x70, 0x69, 0x12, 0x39, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x10, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x11,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x17,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x72, 0x61, 0x73, 0x68, 0x2f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msapi_proto_rawDescOnce sync.Once
	file_msapi_proto_rawDescData = file_msapi_proto_rawDesc
)

func file_msapi_proto_rawDescGZIP() []byte {
	file_msapi_proto_rawDescOnce.Do(func() {
		file_msapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_msapi_proto_rawDescData)
	})
	return file_msapi_proto_rawDescData
}

var file_msapi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msapi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_msapi_proto_goTypes = []interface{}{
	(CodecType)(0),            // 0: rpc.CodecType
	(*MediaParam)(nil),        // 1: rpc.MediaParam
	(*SessionParam)(nil),      // 2: rpc.SessionParam
	(*SessionStatus)(nil),     // 3: rpc.SessionStatus
	(*MediaStream)(nil),       // 4: rpc.MediaStream
	(*MediaAction)(nil),       // 5: rpc.MediaAction
	(*MediaActionResult)(nil), // 6: rpc.MediaActionResult
	(*MediaActionEvent)(nil),  // 7: rpc.MediaActionEvent
}
var file_msapi_proto_depIdxs = []int32{
	0, // 0: rpc.MediaParam.record_type:type_name -> rpc.CodecType
	1, // 1: rpc.MediaApi.PrepareMediaStream:input_type -> rpc.MediaParam
	2, // 2: rpc.MediaApi.StartSession:input_type -> rpc.SessionParam
	2, // 3: rpc.MediaApi.StopSession:input_type -> rpc.SessionParam
	5, // 4: rpc.MediaApi.ExecuteAction:input_type -> rpc.MediaAction
	5, // 5: rpc.MediaApi.ExecuteActionWithNotify:input_type -> rpc.MediaAction
	4, // 6: rpc.MediaApi.PrepareMediaStream:output_type -> rpc.MediaStream
	3, // 7: rpc.MediaApi.StartSession:output_type -> rpc.SessionStatus
	3, // 8: rpc.MediaApi.StopSession:output_type -> rpc.SessionStatus
	6, // 9: rpc.MediaApi.ExecuteAction:output_type -> rpc.MediaActionResult
	7, // 10: rpc.MediaApi.ExecuteActionWithNotify:output_type -> rpc.MediaActionEvent
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_msapi_proto_init() }
func file_msapi_proto_init() {
	if File_msapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaActionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msapi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msapi_proto_goTypes,
		DependencyIndexes: file_msapi_proto_depIdxs,
		EnumInfos:         file_msapi_proto_enumTypes,
		MessageInfos:      file_msapi_proto_msgTypes,
	}.Build()
	File_msapi_proto = out.File
	file_msapi_proto_rawDesc = nil
	file_msapi_proto_goTypes = nil
	file_msapi_proto_depIdxs = nil
}
